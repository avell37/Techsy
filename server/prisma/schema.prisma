generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     String   @default("USER")
  basket   Basket?
  ratings  Rating[]
}

model Basket {
  id            Int            @id @default(autoincrement())
  user          User           @relation(fields: [userId], references: [id])
  userId        Int            @unique
  basketDevices BasketDevice[]
}

model BasketDevice {
  in       Int     @id @default(autoincrement())
  basket   Basket? @relation(fields: [basketId], references: [id])
  basketId Int?
  device   Device? @relation(fields: [deviceId], references: [id])
  deviceId Int?
}

model Rating {
  id       Int     @id @default(autoincrement())
  rate     Int
  text     String
  device   Device? @relation(fields: [deviceId], references: [id])
  deviceId Int?
  user     User?   @relation(fields: [userId], references: [id])
  userId   Int?
}

model Device {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  price         Int
  rating        Int            @default(0)
  img           String
  Brand         Brand?         @relation(fields: [brandId], references: [id])
  brandId       Int
  Type          Type?          @relation(fields: [typeId], references: [id])
  typeId        Int
  basketDevices BasketDevice[]
  deviceInfo    DeviceInfo[]
  ratings       Rating[]
}

model DeviceInfo {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  Device      Device? @relation(fields: [deviceId], references: [id])
  deviceId    Int?
}

model Brand {
  id        Int         @id @default(autoincrement())
  name      String
  devices   Device[]
  type      Type[]
  BrandType BrandType[]
}

model Type {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  devices   Device[]
  brands    Brand[]
  BrandType BrandType[]
}

model BrandType {
  id      Int   @id @default(autoincrement())
  type    Type  @relation(fields: [typeId], references: [id])
  typeId  Int
  brand   Brand @relation(fields: [brandId], references: [id])
  brandId Int

  @@unique([typeId, brandId])
}
